openapi: 3.0.3
info:
  title: alex-api
  description: HTTP server in Go with Swagger endpoints definition. An API for all my hobbies.
  contact:
    name: API Support
    email: alexnou@gmail.com
  version: 0.2.0
servers:
  - url: https://alex-api.herokuapp.com
tags:
  - name: DSP
    description: DSP endpoints
  - name: inART
    description: inART endpoints
paths:
  /dsp/computedRecipe:
    post:
      tags:
        - DSP
      summary: Get the computed recipe
      description: Get the computed recipe
      operationId: getComputedRecipe
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ComputedRecipeRequest"
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ComputedRecipe"
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: recipeRequest
  /dsp/recipes:
    get:
      tags:
        - DSP
      summary: Get all DSP recipes
      description: Get all DSP recipes
      operationId: getDSPRecipes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: "#/components/schemas/DSPRecipe"
  /dsp/recipes/reload:
    post:
      tags:
        - DSP
      summary: Re-scrapes the DSP recipes
      description: Re-scrapes the DSP recipes
      operationId: reloadDSPRecipes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                enum:
                  - OK
  /inArt:
    get:
      tags:
        - inART
      summary: Get inART
      description: Get inART
      operationId: getInArt
      parameters:
        - name: page
          in: query
          description: Numeric ID of the page to get
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InArt"
components:
  schemas:
    InArt:
      required:
        - author
        - created_at
        - height
        - possiblySensitive
        - tweetId
        - url
        - width
      type: object
      properties:
        author:
          type: string
        tweetId:
          type: string
        url:
          type: string
        width:
          type: integer
        height:
          type: integer
        possiblySensitive:
          type: boolean
        created_at:
          type: string
    DSPRecipe:
      required:
        - madeIn
        - materials
        - name
        - produce
        - time
      type: object
      properties:
        name:
          type: string
        produce:
          type: number
        madeIn:
          type: string
        time:
          type: number
        materials:
          type: array
          items:
            $ref: "#/components/schemas/DSPMaterial"
    DSPMaterial:
      type: object
    ComputedRecipeRequest:
      required:
        - rate
        - name
      type: object
      properties:
        name:
          type: string
        rate:
          type: number
        requirements:
          type: object
          additionalProperties:
            type: number
      example:
        name: "Proliferator Mk.III"
        rate: 2.0
        requirements:
          "Carbon Nanotube": 1
    ComputedRecipe:
      required:
        - consumesPerSec
        - craftingPerSecond
        - for
        - madeIn
        - numberOfFacilitiesNeeded
        - produce
        - secondsSpendPerCrafting
      type: object
      properties:
        produce:
          type: string
        madeIn:
          type: string
        numberOfFacilitiesNeeded:
          type: number
        consumesPerSec:
          type: object
          properties: {}
        secondsSpendPerCrafting:
          type: number
        craftingPerSecond:
          type: number
        for:
          type: string
